public function edit($id)
    {
        $slider=Slider::find($id);
        return view('admin.slider.edit',compact('slider'));
    }
    
    public function update(Request $request,$id)
    {
       
             
        $formInput=$request->except('image');
        $slider = Slider::findOrFail($id); 
      // validation
        $this->validate($request,[
            'caption'=>'required',            
            'image'=>'image|mimes:png,jpg,jpeg|max:10000'
        ]);
        //image upload
        $image=$request->image;
        if($image){
            $imageName=$image->getClientOriginalName();
            $image->move('slides',$imageName);
            $formInput['image']=$imageName;
        }

        $slider->update($formInput);
        flash('Slider Image have Succesfully inserted!', 'info');
        return redirect()->route('slider.index');
    }
/*


public function edit($id)
    {
       $user=User::find($id);
        return view('admin.users.edit',compact('user'));
    }

    public function update(Request $request, $id)
    {
        $user = User::findOrFail($id);
        $validator = Validator::make($request->all(), [
            'name' => 'required|max:255',
            'email' => 'required|email|max:255|unique:users',
            'password' => 'required|min:6|confirmed',
        ]);

        if ($validator->fails()) {
            return redirect('admin/user/create')
                        ->withErrors($validator)
                        ->withInput();
        }
       $user->update([
            'name' => $request['name'],
            'email' => $request['email'],
            'password' => bcrypt($request['password']),
        ]);

        flash('User have Succesfully updated!', 'info');        
        return redirect()->route('user.index');
    }

*/